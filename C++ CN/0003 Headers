 Headers in C++
Headers

 

C++ code begins with the inclusion of header files. There are many header files available in the C++ programming language, which will be discussed while moving
ahead with the course.

 

So, what are these header files?

 

The names of program elements such as variables, functions, classes, and so on must be declared before they can be used. For example, you canâ€™t just write x = 42
without first declaring variable x as:

 

int x = 42;

 

The declaration tells the compiler whether the element is an int, a double, a float, a function, or a class. Similarly, header files allow us to put declarations
in one location and then import them wherever we need them. This saves a lot of typing in multi-file programs. To declare a header file, we use #include directive in every
.cpp file. This #include is used to ensure that they are not inserted multiple times into a single .cpp file.

 

Now, moving forward to the code:

 

#include <iostream>
using namespace std;

 

iostream stands for Input/Output stream, meaning this header file is necessary to take input through the user or print output to the screen. This header file contains
the definitions for the functions:

    cin: used to take input
    cout: used to print output

 

namespace defines which input/output form is to be used. You will understand these better as you progress in the course.

 

Note: semicolon (;) is used for terminating a C++ statement. i.e., different statements in a C++ program are separated by a semicolon.
